{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport ScrollableInkTabBar from 'rc-tabs/es/ScrollableInkTabBar';\nimport classNames from 'classnames';\nimport Icon from '../icon';\n\nvar TabBar = function (_React$Component) {\n  _inherits(TabBar, _React$Component);\n\n  function TabBar() {\n    _classCallCheck(this, TabBar);\n\n    return _possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).apply(this, arguments));\n  }\n\n  _createClass(TabBar, [{\n    key: 'render',\n    value: function render() {\n      var _classNames;\n\n      var _props = this.props,\n          tabBarStyle = _props.tabBarStyle,\n          animated = _props.animated,\n          renderTabBar = _props.renderTabBar,\n          tabBarExtraContent = _props.tabBarExtraContent,\n          tabPosition = _props.tabPosition,\n          prefixCls = _props.prefixCls,\n          className = _props.className,\n          size = _props.size,\n          type = _props.type;\n      var inkBarAnimated = (typeof animated === 'undefined' ? 'undefined' : _typeof(animated)) === 'object' ? animated.inkBar : animated;\n      var isVertical = tabPosition === 'left' || tabPosition === 'right';\n      var prevIconType = isVertical ? 'up' : 'left';\n      var nextIconType = isVertical ? 'down' : 'right';\n      var prevIcon = React.createElement('span', {\n        className: prefixCls + '-tab-prev-icon'\n      }, React.createElement(Icon, {\n        type: prevIconType,\n        className: prefixCls + '-tab-prev-icon-target'\n      }));\n      var nextIcon = React.createElement('span', {\n        className: prefixCls + '-tab-next-icon'\n      }, React.createElement(Icon, {\n        type: nextIconType,\n        className: prefixCls + '-tab-next-icon-target'\n      })); // Additional className for style usage\n\n      var cls = classNames(prefixCls + '-' + tabPosition + '-bar', (_classNames = {}, _defineProperty(_classNames, prefixCls + '-' + size + '-bar', !!size), _defineProperty(_classNames, prefixCls + '-card-bar', type && type.indexOf('card') >= 0), _classNames), className);\n\n      var renderProps = _extends({}, this.props, {\n        inkBarAnimated: inkBarAnimated,\n        extraContent: tabBarExtraContent,\n        style: tabBarStyle,\n        prevIcon: prevIcon,\n        nextIcon: nextIcon,\n        className: cls\n      });\n\n      var RenderTabBar = void 0;\n\n      if (renderTabBar) {\n        RenderTabBar = renderTabBar(renderProps, ScrollableInkTabBar);\n      } else {\n        RenderTabBar = React.createElement(ScrollableInkTabBar, renderProps);\n      }\n\n      return React.cloneElement(RenderTabBar);\n    }\n  }]);\n\n  return TabBar;\n}(React.Component);\n\nexport default TabBar;\nTabBar.defaultProps = {\n  animated: true,\n  type: 'line'\n};","map":null,"metadata":{},"sourceType":"module"}