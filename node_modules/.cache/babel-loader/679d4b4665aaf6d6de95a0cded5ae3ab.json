{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nvar Comment = function (_React$Component) {\n  _inherits(Comment, _React$Component);\n\n  function Comment() {\n    _classCallCheck(this, Comment);\n\n    var _this = _possibleConstructorReturn(this, (Comment.__proto__ || Object.getPrototypeOf(Comment)).apply(this, arguments));\n\n    _this.renderNested = function (children) {\n      var prefixCls = _this.props.prefixCls;\n      return React.createElement('div', {\n        className: classNames(prefixCls + '-nested')\n      }, children);\n    };\n\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: 'getAction',\n    value: function getAction(actions) {\n      if (!actions || !actions.length) {\n        return null;\n      }\n\n      var actionList = actions.map(function (action, index) {\n        return React.createElement('li', {\n          key: 'action-' + index\n        }, action);\n      });\n      return actionList;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _a = this.props,\n          actions = _a.actions,\n          author = _a.author,\n          avatar = _a.avatar,\n          children = _a.children,\n          className = _a.className,\n          content = _a.content,\n          prefixCls = _a.prefixCls,\n          style = _a.style,\n          datetime = _a.datetime,\n          otherProps = __rest(_a, [\"actions\", \"author\", \"avatar\", \"children\", \"className\", \"content\", \"prefixCls\", \"style\", \"datetime\"]);\n\n      var avatarDom = React.createElement('div', {\n        className: prefixCls + '-avatar'\n      }, typeof avatar === 'string' ? React.createElement('img', {\n        src: avatar\n      }) : avatar);\n      var actionDom = actions && actions.length ? React.createElement('ul', {\n        className: prefixCls + '-actions'\n      }, this.getAction(actions)) : null;\n      var authorContent = React.createElement('div', {\n        className: prefixCls + '-content-author'\n      }, author && React.createElement('span', {\n        className: prefixCls + '-content-author-name'\n      }, author), datetime && React.createElement('span', {\n        className: prefixCls + '-content-author-time'\n      }, datetime));\n      var contentDom = React.createElement('div', {\n        className: prefixCls + '-content'\n      }, authorContent, React.createElement('div', {\n        className: prefixCls + '-content-detail'\n      }, content), actionDom);\n      var comment = React.createElement('div', {\n        className: prefixCls + '-inner'\n      }, avatarDom, contentDom);\n      return React.createElement('div', _extends({}, otherProps, {\n        className: classNames(prefixCls, className),\n        style: style\n      }), comment, children ? this.renderNested(children) : null);\n    }\n  }]);\n\n  return Comment;\n}(React.Component);\n\nexport default Comment;\nComment.defaultProps = {\n  prefixCls: 'ant-comment'\n};","map":null,"metadata":{},"sourceType":"module"}